---
import CallToAction from './CallToAction.astro';
import Icon from './Icon.astro';
---

<aside>
	<h2>Interested in working together?</h2>

	<form action="https://formsubmit.co/ajax/86295602bff960b7b854c7b5de8af263" method="POST" id="contact-form" class="contact-card">
		<div class="row">
			<label class="field">
				<span class="label">Name</span>
				<input name="name" type="text" placeholder="Your name" required />
			</label>

			<label class="field">
				<span class="label">Email</span>
				<input name="email" type="email" placeholder="you@example.com" required />
			</label>
		</div>

		<label class="field message">
			<span class="label">Message</span>
			<textarea name="message" rows="5" placeholder="Tell me about your project" required></textarea>
		</label>

		<!-- FormSubmit: disable captcha if you prefer -->
		<input type="hidden" name="_captcha" value="false" />

		<div class="actions">
			<CallToAction id="submit-button">
				<span class="btn-text">Send Message</span>
				<Icon icon="paper-plane-tilt" size="1.2em" />
			</CallToAction>
			<div id="form-status" role="status" aria-live="polite" class="status"></div>
		</div>
	</form>
</aside>

<style>
	aside {
	  display: flex;
	  flex-direction: column;
	  align-items: center;
		gap: 2.25rem;
		border-top: 1px solid var(--gray-800);
		border-bottom: 1px solid var(--gray-800);
		padding: 4rem 1.25rem;
	  background-color: var(--gray-999_40);
	  box-shadow: var(--shadow-sm);
	}

	h2 {
		font-size: var(--text-3xl);
		text-align: left;
		width: 100%;
		max-width: 48ch;
	}

	@media (min-width: 50em) {
		aside {
			padding: 7.5rem;
			flex-direction: row;
			flex-wrap: wrap;
			justify-content: space-between;
		}

		h2 {
			font-size: var(--text-3xl);
			text-align: left;
		}
	}
</style>

	<style>
			.contact-card {
				width: 100%;
				max-width: 1000ch;
				background: linear-gradient(180deg, rgba(255,255,255,0.02), rgba(255,255,255,0.01));
				border: 1px solid rgba(255,255,255,0.04);
				padding: 2rem;
				border-radius: 14px;
				display: flex;
				flex-direction: column;
				gap: 2.25rem;
				margin-top: 0.5rem;
				box-shadow: var(--shadow-sm);
			}

		.row { display: flex; gap: 1rem; }
		.field { display: flex; flex-direction: column; gap: 0.5rem; flex: 1; }
		.field .label { font-size: 1.25rem; color: var(--gray-300); }
		input, textarea { background: transparent; border: 1px solid rgba(255,255,255,0.06); color: var(--text); padding: 1rem 1rem; border-radius: 10px; font-size: 1.25rem; line-height: 1.3; }
		input::placeholder, textarea::placeholder { color: rgba(255,255,255,0.45); font-size: 1.1rem; }
		.message textarea { min-height: 11rem; resize: vertical; font-size: 1.2rem; }

		.actions { display:flex; align-items:center; gap: 1rem; margin-top: 0.5rem; }
		.status { color: var(--gray-300); font-size: 1rem; }

		/* Disabled state for button */
		button[disabled], a[aria-disabled='true'] { opacity: 0.6; cursor: not-allowed; }

		@media (max-width: 800px) {
			h2 { font-size: var(--text-2xl); }
			.row { flex-direction: column; }
			.contact-card { width: 100%; }
			input, textarea { font-size: 1.15rem; padding: 0.85rem; }
			.field .label { font-size: 1.05rem; }
		}
	</style>

	<script type="module">
	const form = document.getElementById('contact-form');
	const status = document.getElementById('form-status');
	const submitButton = document.getElementById('submit-button');

	if (form) {
		form.addEventListener('submit', async (e) => {
			e.preventDefault();
			status.textContent = '';

			// show sending state
			if (submitButton) {
				submitButton.setAttribute('aria-disabled', 'true');
			}

			const formData = new FormData(form);

			const ctaEl = submitButton?.closest('button, a');
			try {
				// show loading state
				if (ctaEl) ctaEl.classList.add('loading');

				const res = await fetch(form.action, {
					method: 'POST',
					body: formData,
				});

				if (res.ok) {
					const json = await res.json().catch(() => ({}));
					status.textContent = (json.message || json.success || 'Message sent — thanks!');
					// show success animation
					if (ctaEl) {
						ctaEl.classList.remove('loading');
						ctaEl.classList.add('success');
					}
					form.reset();

					// optional redirect (set data-redirect attribute on form)
					const redirectUrl = form.dataset.redirect;
					const delay = parseInt(form.dataset.redirectDelay || '2500', 10);
					if (redirectUrl) {
						setTimeout(() => { window.location.href = redirectUrl; }, delay);
					}
				} else {
					const json = await res.json().catch(() => ({}));
					status.textContent = json.error || json.message || 'Failed to send message.';
					if (ctaEl) ctaEl.classList.remove('loading');
				}
			} catch (err) {
				console.error(err);
				status.textContent = 'Network error — please try again later.';
				if (ctaEl) ctaEl.classList.remove('loading');
			} finally {
				if (submitButton) {
					submitButton.removeAttribute('aria-disabled');
				}
			}
		});
	}
	</script>
